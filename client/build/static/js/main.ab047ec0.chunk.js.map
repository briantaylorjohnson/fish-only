{"version":3,"sources":["components/Nav/Nav.js","components/Hero/Hero.js","components/Login/Login.js","screens/Public.js","screens/Reports.js","screens/Tackle.js","screens/Profile.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Hero","Login","Public","props","state","React","Component","Reports","Tackle","Profile","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iYAyBeA,MArBf,WACE,OACE,yBAAKC,UAAU,+CACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,cAGA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,sBAC3C,yBAAKR,UAAU,cACb,uBAAGA,UAAU,oBAAoBC,KAAK,YAAtC,mBACA,uBAAGD,UAAU,oBAAoBC,KAAK,WAAtC,cACA,uBAAGD,UAAU,oBAAoBC,KAAK,YAAtC,e,YCDKQ,MAZf,WACE,OACE,yBAAKT,UAAU,6BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,cACA,uBAAGA,UAAU,QAAb,wD,MCIGU,MATf,WACE,OACE,yBAAKV,UAAU,yBAAf,gBCqBWW,E,YApBX,WAAYC,GACX,IAAD,8BACI,4CAAMA,KACDC,MACL,GAHJ,E,sEAUI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAhBKC,IAAMC,WCmBZC,E,YAnBX,WAAYJ,GACX,IAAD,8BACI,4CAAMA,KACDC,MACL,GAHJ,E,sEAUI,OACI,yD,GAdUC,IAAMC,WCqBbE,E,YAnBX,WAAYL,GACX,IAAD,8BACI,4CAAMA,KACDC,MACL,GAHJ,E,sEAUI,OACI,oD,GAdSC,IAAMC,WCqBZG,E,YAnBX,WAAYN,GACX,IAAD,8BACI,4CAAMA,KACDC,MACL,GAHJ,E,sEAUI,OACI,iD,GAdUC,IAAMC,W,MCUbI,MATf,WACE,OACE,yBAAKnB,UAAU,yBAAf,gB,gBCiCWoB,G,uLAzBX,OACE,6BACE,yBAAKpB,UAAU,aAGb,kBAAC,EAAD,MAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,UAAUC,UAAWN,IACvC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,WAAWC,UAAWL,MAK5C,kBAAC,EAAD,Y,GAtBQH,cCEES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ab047ec0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Nav.css\";\n\n// Creates Nav component for heading and links to pages\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n          Fish Only!\n      </a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <a className=\"nav-item nav-link\" href=\"/reports\">Fishing Reports</a>\n          <a className=\"nav-item nav-link\" href=\"/tackle\">Tackle Box</a>\n          <a className=\"nav-item nav-link\" href=\"/profile\">Profile</a>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Exports Nav component\nexport default Nav;","import React from \"react\";\nimport \"./Hero.css\";\n\n// Creates Hero component\nfunction Hero() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n            <h1 className=\"display-4\">Fish Only!</h1>\n            <p className=\"lead\">Connecting humans and fish... one hook at a time!</p>\n        </div>\n    </div>\n  );\n}\n\n// Exports Hero component\nexport default Hero;","import React from \"react\";\nimport \"./Login.css\";\n\n// Creates Login component \nfunction Login() {\n  return (\n    <div className=\"background bg-success\">\n        Log In Here\n    </div>\n  );\n}\n\n// Exports Login component\nexport default Login;","import React from \"react\";\nimport \"./Screens.css\";\nimport Hero from \"../components/Hero\"\nimport Login from \"../components/Login\"\n\nclass Public extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                <Hero />\n                <Login />\n            </div>\n        )\n    }\n}\n\nexport default Public;","import React from \"react\";\nimport \"./Screens.css\";\n\nclass Reports extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                Fishing Reports Here\n            </div>\n        )\n    }\n}\n\nexport default Reports;","import React from \"react\";\nimport \"./Screens.css\";\n\nclass Tackle extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                Tackle Box Here\n            </div>\n        )\n    }\n}\n\nexport default Tackle;","import React from \"react\";\nimport \"./Screens.css\";\n\nclass Profile extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                Profile Here\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from \"react\";\nimport \"./Footer.css\";\n\n// Creates Footer component\nfunction Footer() {\n  return (\n    <div className=\"background bg-success\">\n        Footer Here\n    </div>\n  );\n}\n\n// Exports Footer component\nexport default Footer;","import React, {Component} from 'react';\nimport Nav from \"./components/Nav\";\nimport Public from \"./screens/Public\";\nimport Reports from \"./screens/Reports\";\nimport Tackle from \"./screens/Tackle\";\nimport Profile from \"./screens/Profile\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component\n{\n  render()\n  {\n    return(\n      <div>\n        <div className=\"container\">\n          \n          {/* Navigation */}\n          <Nav />\n          \n          {/* Router */}\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Public} />\n              <Route exact path=\"/reports\" component={Reports} />\n              <Route exact path=\"/tackle\" component={Tackle} />\n              <Route exact path=\"/profile\" component={Profile} />\n            </Switch>\n          </Router>\n\n          {/* Footer */}\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}