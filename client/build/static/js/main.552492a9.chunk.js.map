{"version":3,"sources":["components/Nav/Nav.js","components/Hero/Hero.js","utils/API.js","components/Login/Login.js","components/Splash/Splash.js","screens/Public.js","screens/Reports.js","screens/Tackle.js","screens/Profile.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Hero","authUser","authData","axios","post","Login","props","handleAuth","username","password","API","state","then","data","code","console","log","handleUsername","bind","handlePassword","u","preventDefault","this","setState","target","value","p","placeholder","onChange","onClick","a","React","Component","Splash","src","alt","Public","loggedIn","firstName","Reports","Tackle","Profile","Footer","App","name","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.552492a9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Nav.css\";\n\n// Creates Nav component for heading and links to pages\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n          Fish Only!\n      </a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <a className=\"nav-item nav-link\" href=\"/reports\">Fishing Reports</a>\n          <a className=\"nav-item nav-link\" href=\"/tackle\">Tackle Box</a>\n          <a className=\"nav-item nav-link\" href=\"/profile\">Profile</a>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Exports Nav component\nexport default Nav;","import React from \"react\";\nimport \"./Hero.css\";\n\n// Creates Hero component\nfunction Hero() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n            <h1 className=\"display-4\">Fish Only!</h1>\n            <p className=\"lead\">Connecting humans and fish... one hook at a time!</p>\n        </div>\n    </div>\n  );\n}\n\n// Exports Hero component\nexport default Hero;","import axios from \"axios\"\n\nexport default\n{\n    authUser: (authData) => { return axios.post(\"/api/authUser\", authData)}\n}","import React from \"react\";\nimport \"./Login.css\";\nimport API from \"../../utils/API\"\n\n// Creates Login component \nclass Login extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    \n    this.state =\n    {}\n\n    this.handleUsername = this.handleUsername.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleAuth = this.handleAuth.bind(this);\n  }\n\n  handleUsername(u)\n  {\n    u.preventDefault();\n    this.setState({username: u.target.value});\n  }\n\n  handlePassword(p)\n  {\n    p.preventDefault();\n    this.setState({password: p.target.value});\n  }\n\n  handleAuth = (username, password) =>\n  {\n\n    API.authUser({\"username\": this.state.username, \"password\": this.state.password})\n    .then( (data) =>\n    {\n      if (data.data.code === 200)\n      {\n        console.log(\"Success\");\n      }\n      else\n      {\n        console.log(\"Fail\");\n      }\n    });\n  }\n\nrender()\n{\n  return (\n  <div className=\"row border border-secondary login\">\n  <div className=\"col-md-6 pr-3 pl-3 pt-3 pb-3\">\n        <form>\n          <div className=\"form-row\">\n            <div className=\"col\">\n              <h5>Log In</h5>\n              <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={this.handleUsername}></input>\n            </div>\n          </div>\n          <div className=\"form-row mt-2\">\n            <div className=\"col\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handlePassword}></input>\n            </div>\n          </div>\n          <div className=\"form-row\">\n            <div className=\"col\">\n              <button type=\"submit\" className=\"btn btn-sm btn-primary mt-2 \" onClick={(a)=>{\n                a.preventDefault();\n                this.handleAuth(this.state.username, this.state.password);\n                console.log(\"Username - State: \" + this.state.username);\n                console.log(\"Password - State: \" + this.state.password);\n                }}>Sign in</button>\n            </div>\n          </div>\n        </form>\n    </div>\n    <div className=\"col-md-6 pr-3 pl-3 pt-3 pb-3\">\n      <h5>Register</h5>\n      <p>Some good ole marketing pitch on why fishermen should join FishOnly.com!</p>\n      <a href=\"/register\"><button className=\"btn btn-sm btn-primary mt-2 \">Register</button></a>\n    </div>\n  </div>\n  );\n}\n}\n\n// Exports Login component\nexport default Login;","import React from \"react\";\nimport \"./Splash.css\";\n\n// Creates Splash image component\nfunction Splash() {\n  return (\n    <div className=\"\">\n        <div className=\"row\">\n            <div className=\"col-md-6 mt-3\">\n                <img className=\"splash-left\" src=\"./assets/images/spinners.jpg\" alt=\"\" />\n            </div>\n            <div className=\"col-md-6 mt-3\">\n            <img className=\"splash-left\" src=\"./assets/images/navistar.jpg\" alt=\"\" />\n            </div>\n                \n        </div>\n    </div>\n  );\n}\n\n// Exports Splash component\nexport default Splash;","import React from \"react\";\nimport \"./Screens.css\";\nimport Hero from \"../components/Hero\"\nimport Login from \"../components/Login\"\nimport Splash from \"../components/Splash\"\n\nfunction Public(props)\n{\n    return(\n        <div>\n            <Hero />\n            <Login loggedIn={props.loggedIn} username={props.username} firstName={props.firstName} password={props.password} />\n            <Splash />\n        </div>\n    )\n}\n\n\nexport default Public;","import React from \"react\";\nimport \"./Screens.css\";\n\nclass Reports extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                Fishing Reports Here\n            </div>\n        )\n    }\n}\n\nexport default Reports;","import React from \"react\";\nimport \"./Screens.css\";\n\nclass Tackle extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                Tackle Box Here\n            </div>\n        )\n    }\n}\n\nexport default Tackle;","import React from \"react\";\nimport \"./Screens.css\";\n\nclass Profile extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                Profile Here\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from \"react\";\nimport \"./Footer.css\";\n\n// Creates Footer component\nfunction Footer() {\n  return (\n    <div className=\"footer-color text-center mt-3\">\n        <small className=\"footer-text\">Copyright 2019 - Taylor Johnson</small>\n    </div>\n  );\n}\n\n// Exports Footer component\nexport default Footer;","import React from 'react';\nimport Nav from \"./components/Nav\";\nimport Public from \"./screens/Public\";\nimport Reports from \"./screens/Reports\";\nimport Tackle from \"./screens/Tackle\";\nimport Profile from \"./screens/Profile\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state =\n    {\n      loggedIn: false,\n      username: \"tswizz\",\n      name: \"\",\n      password: \"\"\n    };\n  }\n\n  render()\n  {\n    return(\n      <div>\n        <div className=\"container\">\n          \n          {/* Navigation */}\n          <Nav />\n          \n          {/* Router */}\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" render={(props) => <Public {...props} loggedIn={this.state.loggedIn} username={this.state.username} name={this.state.name} password={this.state.password} />} />\n              <Route exact path=\"/reports\" render={(props) => <Reports {...props} loggedIn={this.state.loggedIn} username={this.state.username} name={this.state.name} />} />\n              <Route exact path=\"/tackle\" render={(props) => <Tackle {...props} loggedIn={this.state.loggedIn} username={this.state.username} name={this.state.name} />} />\n              <Route exact path=\"/profile\" render={(props) => <Profile {...props} loggedIn={this.state.loggedIn} username={this.state.username} name={this.state.name} />} />\n            </Switch>\n          </Router>\n\n          {/* Footer */}\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}